// Generated by CoffeeScript 1.7.1
(function() {
  "use strict";
  window.CategoryDetails = (function() {
    function CategoryDetails(dom_elem) {
      this.dom_elem = dom_elem;
      this.notifications = document.notification_handler;
      this.dynamic_sorting = document.config.dynamic_sorting ? true : false;
    }

    CategoryDetails.prototype.setCategoryTree = function(tree) {
      this.tree = tree;
    };

    CategoryDetails.prototype.showDetails = function(cat_id) {
      if (!cat_id) {
        return this.dom_elem.html("");
      } else {
        this.dom_elem.find('.tab-content').hide(100);
        return $.ajax({
          url: 'ajax/category_info.php',
          type: 'get',
          cache: false,
          data: {
            cat: cat_id
          },
          error: function() {
            return this.notifications.showError(lang.error_load_details);
          },
          success: (function(_this) {
            return function(data) {
              if (!data || data === "false") {
                return _this.notifications.showError(lang.error_load_details);
              } else {
                _this.dom_elem.html(data);
                if (_this.dynamic_sorting) {
                  $("#input_oxsort").parents("div.form-group").hide();
                }
                return _this.bindListeners();
              }
            };
          })(this)
        });
      }
    };

    CategoryDetails.prototype.bindListeners = function() {
      var createUploader, el, form, _i, _len, _ref, _results;
      form = this.dom_elem.find("form");
      form.ajaxForm({
        url: 'ajax/category_info_save.php',
        type: 'post',
        dataType: 'json',
        beforeSubmit: function(arr, form) {
          return form.find("input, textarea").attr('disabled', 'disabled');
        },
        success: (function(_this) {
          return function(data, a, b, elem) {
            form.find("input, textarea").removeAttr('disabled');
            return _this.tree.updateNode(data.cat_id, {
              title: $(elem).find("#input_oxtitle").val(),
              sort: data.sort,
              hidden: data.oxhidden,
              active: data.oxactive
            });
          };
        })(this)
      });
      createUploader = (function(_this) {
        return function(el) {
          var setButtonText, uploader;
          setButtonText = function(el) {
            var text;
            text = $(el).find('img').length === 0 ? lang.picture_upload_button : lang.picture_upload_button_update;
            return $(el).find('.qq-upload-button span').text(text);
          };
          uploader = new qq.FileUploader({
            element: $(el).find(".upload-add")[0],
            action: 'ajax/fileupload.php',
            debug: false,
            multiple: false,
            template: '<div class="qq-uploader">' + '<div class="qq-upload-drop-area"><span></span></div>' + '<a class="qq-upload-button btn btn-default"><i class="icon-camera"> </i> <span></span></a>' + '<ul class="qq-upload-list"></ul>' + '</div>',
            params: {
              cat_id: $("#cat_id").val(),
              role: $(el).attr('id').replace("file-uploader-", "")
            },
            onUpload: function(id, filename) {
              return $(el).find(".btn").attr('disabled', 'disabled');
            },
            onComplete: function(id, filename, data) {
              $(el).find('.btn').removeAttr('disabled');
              if ((data.error != null) || data === "false" || data === false || data.path === "false") {
                return _this.notifications.showError(lang.error_upload_picture);
              } else {
                $(el).find(".upload-delete").show();
                $(el).find('.upload-infos .picture-filename').html(data.filename);
                $(el).find('.upload-infos .picture-imagesize-width').text(data.imagesize.width);
                $(el).find('.upload-infos .picture-imagesize-height').text(data.imagesize.height);
                $(el).find('.upload-infos').show();
                $(el).find(".image").html($("<img src=\"" + data.path + "\" class=\"category_picture\">"));
                return setButtonText(el);
              }
            }
          });
          setButtonText(el);
          return $(el).find(".upload-delete button").bind('click', function(event) {
            var elem;
            elem = $(event.currentTarget).parents("div.fileuploader");
            elem.find('.btn').attr('disabled', 'disabled');
            return $.ajax({
              url: 'ajax/fileupload.php',
              type: 'post',
              data: {
                action: 'delete',
                cat_id: $("#cat_id").val(),
                role: $(elem).attr('id').replace("file-uploader-", "")
              },
              success: function(data) {
                elem.find('.btn').removeAttr('disabled');
                if (data === "true") {
                  $(elem).find('.image').html("");
                  $(elem).find('.upload-delete').hide();
                  $(elem).find('.upload-infos').hide();
                  return setButtonText(el);
                } else {
                  return _this.notifications.showError(lang.error_delete_picture);
                }
              }
            });
          });
        };
      })(this);
      _ref = form.find("#pictures div.fileuploader");
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        el = _ref[_i];
        createUploader(el);
        if ($.trim($(el).find(".image").html()).length === 0) {
          $(el).find(".upload-delete").hide();
          _results.push($(el).find(".upload-infos").hide());
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    return CategoryDetails;

  })();

}).call(this);
